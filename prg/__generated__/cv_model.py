# generated by datamodel-codegen:
#   filename:  cv.json
#   timestamp: 2025-03-17T16:11:33+00:00

from __future__ import annotations

from typing import List

from pydantic import BaseModel


class Name(BaseModel):
    ja: str
    en: str
    de: str


class Gender(BaseModel):
    ja: str
    en: str
    de: str


class MaritalStatus(BaseModel):
    ja: str
    en: str
    de: str


class AlimonyPayments(BaseModel):
    ja: str
    en: str
    de: str


class Nationality(BaseModel):
    ja: str
    en: str
    de: str


class Address(BaseModel):
    Address: str
    Furigana: str
    Zip: str


class Profile(BaseModel):
    Name: Name
    Gender: Gender
    Dependents: str
    MaritalStatus: MaritalStatus
    AlimonyPayments: AlimonyPayments
    Furigana: str
    Birthyear: str
    Birthmonth: str
    Birthday: str
    Nationality: Nationality
    Email: str
    Phone: str
    Address: Address


class Title(BaseModel):
    ja: str
    en: str
    de: str


class Location(BaseModel):
    ja: str
    en: str
    de: str


class Description(BaseModel):
    ja: str
    en: str
    de: str


class Detail(BaseModel):
    Description: Description
    Link: str


class EducationItem(BaseModel):
    Title: Title
    StartYear: str
    StartMonth: str
    EndYear: str
    EndMonth: str
    Location: Location
    Details: List[Detail]


class Detail1(BaseModel):
    Description: Description
    Link: str


class WorkItem(BaseModel):
    Title: Title
    Start: str
    StartYear: str
    StartMonth: str
    EndYear: str
    EndMonth: str
    Location: Location
    Details: List[Detail1]


class Details(BaseModel):
    ja: str
    en: str
    de: str


class Links(BaseModel):
    Repository: str
    Website: str


class Project(BaseModel):
    Title: str
    StartYear: str
    StartMonth: str
    EndYear: str
    EndMonth: str
    Details: Details
    Links: Links
    Users: int
    Technology: str


class Design(BaseModel):
    Details: Details
    Links: List[str]
    Technology: str


class Programming(BaseModel):
    Details: Details
    Technology: str


class Languages(BaseModel):
    Details: Details
    Technology: str


class Hobbies(BaseModel):
    Details: Details
    Technology: str


class Skills1(BaseModel):
    Details: Details
    Technology: str


class Skills(BaseModel):
    Design: Design
    Programming: Programming
    Languages: Languages
    Hobbies: Hobbies
    Skills: Skills1


class Workplace(BaseModel):
    ja: str
    en: str
    de: str


class Salary(BaseModel):
    ja: str
    en: str
    de: str


class Expectations(BaseModel):
    Workplace: Workplace
    Salary: Salary


class Story(BaseModel):
    ja: str
    en: str
    de: str


class Model(BaseModel):
    Profile: Profile
    Education: List[EducationItem]
    Work: List[WorkItem]
    Projects: List[Project]
    Skills: Skills
    Expectations: Expectations
    Story: Story
