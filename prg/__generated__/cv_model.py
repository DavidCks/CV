# generated by datamodel-codegen:
#   filename:  cv.json
#   timestamp: 2025-04-08T13:55:05+00:00

from __future__ import annotations

from typing import List

from pydantic import BaseModel


class ProgrammingLanguageExpert(BaseModel):
    ja: str
    en: str
    de: str


class ProgrammingLanguageAdvanced(BaseModel):
    ja: str
    en: str
    de: str


class ProgrammingLanguageNovice(BaseModel):
    ja: str
    en: str
    de: str


class SoftwareExpert(BaseModel):
    ja: str
    en: str
    de: str


class SoftwareAdvanced(BaseModel):
    ja: str
    en: str
    de: str


class SoftwareNovice(BaseModel):
    ja: str
    en: str
    de: str


class OperatingSystemExpert(BaseModel):
    ja: str
    en: str
    de: str


class OperatingSystemAdvanced(BaseModel):
    ja: str
    en: str
    de: str


class OperatingSystemNovice(BaseModel):
    ja: str
    en: str
    de: str


class ToolExpert(BaseModel):
    ja: str
    en: str
    de: str


class ToolAdvanced(BaseModel):
    ja: str
    en: str
    de: str


class ToolNovice(BaseModel):
    ja: str
    en: str
    de: str


class FrameworkLibraryExpert(BaseModel):
    ja: str
    en: str
    de: str


class FrameworkLibraryAdvanced(BaseModel):
    ja: str
    en: str
    de: str


class FrameworkLibraryNovice(BaseModel):
    ja: str
    en: str
    de: str


class DatabaseExpert(BaseModel):
    ja: str
    en: str
    de: str


class DatabaseAdvanced(BaseModel):
    ja: str
    en: str
    de: str


class DatabaseNovice(BaseModel):
    ja: str
    en: str
    de: str


class Levels(BaseModel):
    ProgrammingLanguageExpert: ProgrammingLanguageExpert
    ProgrammingLanguageAdvanced: ProgrammingLanguageAdvanced
    ProgrammingLanguageNovice: ProgrammingLanguageNovice
    SoftwareExpert: SoftwareExpert
    SoftwareAdvanced: SoftwareAdvanced
    SoftwareNovice: SoftwareNovice
    OperatingSystemExpert: OperatingSystemExpert
    OperatingSystemAdvanced: OperatingSystemAdvanced
    OperatingSystemNovice: OperatingSystemNovice
    ToolExpert: ToolExpert
    ToolAdvanced: ToolAdvanced
    ToolNovice: ToolNovice
    FrameworkLibraryExpert: FrameworkLibraryExpert
    FrameworkLibraryAdvanced: FrameworkLibraryAdvanced
    FrameworkLibraryNovice: FrameworkLibraryNovice
    DatabaseExpert: DatabaseExpert
    DatabaseAdvanced: DatabaseAdvanced
    DatabaseNovice: DatabaseNovice


class Classes(BaseModel):
    Levels: Levels


class Name(BaseModel):
    ja: str
    en: str
    de: str


class Gender(BaseModel):
    ja: str
    en: str
    de: str


class MaritalStatus(BaseModel):
    ja: str
    en: str
    de: str


class AlimonyPayments(BaseModel):
    ja: str
    en: str
    de: str


class Nationality(BaseModel):
    ja: str
    en: str
    de: str


class Address(BaseModel):
    Address: str
    Furigana: str
    Zip: str


class Profile(BaseModel):
    Name: Name
    Gender: Gender
    Dependents: str
    MaritalStatus: MaritalStatus
    AlimonyPayments: AlimonyPayments
    Furigana: str
    Birthyear: str
    Birthmonth: str
    Birthday: str
    Nationality: Nationality
    Email: str
    Phone: str
    Address: Address


class Title(BaseModel):
    ja: str
    en: str
    de: str


class Location(BaseModel):
    ja: str
    en: str
    de: str


class Description(BaseModel):
    ja: str
    en: str
    de: str


class Detail(BaseModel):
    Description: Description
    Link: str


class EducationItem(BaseModel):
    Title: Title
    StartYear: str
    StartMonth: str
    EndYear: str
    EndMonth: str
    Location: Location
    Details: List[Detail]


class Role(BaseModel):
    ja: str
    en: str
    de: str


class CompanyDescription(BaseModel):
    ja: str
    en: str
    de: str


class Workers(BaseModel):
    ja: str
    en: str
    de: str


class Scope(BaseModel):
    ja: str
    en: str
    de: str


class Tasks(BaseModel):
    ja: str
    en: str
    de: str


class Responsibility(BaseModel):
    Title: Title
    Tasks: Tasks


class Achievement(BaseModel):
    Title: Title
    Description: Description
    Link: str


class Item1(BaseModel):
    ja: str
    en: str
    de: str


class Item(BaseModel):
    LevelKey: str
    Item: Item1


class EnvironmentItem(BaseModel):
    Title: Title
    Items: List[Item]


class Detail1(BaseModel):
    Description: Description
    Link: str


class WorkItem(BaseModel):
    Title: Title
    Role: Role
    CompanyDescription: CompanyDescription
    Workers: Workers
    Scope: Scope
    Responsibilities: List[Responsibility]
    Achievements: List[Achievement]
    Environment: List[EnvironmentItem]
    Start: str
    StartYear: str
    StartMonth: str
    EndYear: str
    EndMonth: str
    Location: Location
    Details: List[Detail1]


class Details(BaseModel):
    ja: str
    en: str
    de: str


class Links(BaseModel):
    Repository: str
    Website: str


class Project(BaseModel):
    Title: str
    StartYear: str
    StartMonth: str
    EndYear: str
    EndMonth: str
    Details: Details
    Links: Links
    Users: int
    Technology: str


class Technology(BaseModel):
    ja: str
    en: str
    de: str


class Design(BaseModel):
    Details: Details
    Links: List[str]
    Technology: Technology


class Programming(BaseModel):
    Details: Details
    Technology: Technology


class Languages(BaseModel):
    Details: Details
    Technology: Technology


class Hobbies(BaseModel):
    Details: Details
    Technology: Technology


class Skills1(BaseModel):
    Details: Details
    Technology: Technology


class Skills(BaseModel):
    Design: Design
    Programming: Programming
    Languages: Languages
    Hobbies: Hobbies
    Skills: Skills1


class Workplace(BaseModel):
    ja: str
    en: str
    de: str


class Salary(BaseModel):
    ja: str
    en: str
    de: str


class Expectations(BaseModel):
    Workplace: Workplace
    Salary: Salary


class Story(BaseModel):
    ja: str
    en: str
    de: str


class Model(BaseModel):
    classes: Classes
    Profile: Profile
    Education: List[EducationItem]
    Work: List[WorkItem]
    Projects: List[Project]
    Skills: Skills
    Expectations: Expectations
    Story: Story
